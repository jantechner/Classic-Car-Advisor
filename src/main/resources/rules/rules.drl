package com.drools.example
import java.util.ArrayList

import com.drools.example.controllers.QuestionViewController
import com.drools.example.HelloWorld
import com.drools.example.UserAnswer
import com.drools.example.Question
import com.drools.example.Car
import java.util.ArrayList
import java.util.Arrays
import org.kie.api.task.model.User



rule "Init"
    when
    then
    System.out.println("Init rule fired - first question added");

    ArrayList<UserAnswer> answers = new ArrayList<>();
    answers.add(new UserAnswer("Reliability and convenience bore me"));
    answers.add(new UserAnswer("I guess I'm making some kind of statement about something?"));
    answers.add(new UserAnswer("New cars have no soul"));
    answers.add(new UserAnswer("I prefer the style"));
    answers.add(new UserAnswer("Love speed, hate safety"));

    insert(new Question("Why do you want a classic?", answers, new ArrayList<Car>()));
end

rule "Show question with possible answers"
    when
        q : Question();
    then

        System.out.println("Q: " + q.content);
        System.out.println();
        for (UserAnswer answer: q.answers){
            System.out.println(answer.content);
        }
        System.out.println();
        System.out.println("Wait for user answer...");
        System.out.println();
//        UserAnswer ua = new UserAnswer("Reliability and convenience bore me");
//        UserAnswer ua1 = new UserAnswer("I'm erotically drawn to tow trucks and freeway shoulders");
//        insertLogical(ua);
//        insertLogical(ua1);
end

// Reliability and convenience bore me - branch 1/5

rule "Why do you want a classic? - Reliability and convenience bore me"
    when
        q : Question(content == "Why do you want a classic?");
        a : UserAnswer(content == "Reliability and convenience bore me");
    then
        ArrayList<UserAnswer> answers = new ArrayList<>();
        answers.add(new UserAnswer("I want to know how cars work"));
        answers.add(new UserAnswer("I'm erotically drawn to tow trucks and freeway shoulders"));
//        retract(a)
//        retract(q)
        insert(new Question("Oh yeah? Why's that?", answers, new ArrayList<Car>()));
end

rule "Oh yeah? Why's that? - I'm erotically drawn to tow trucks and freeway shoulders"
    when
        q : Question(content == "Oh yeah? Why's that?");
        a : UserAnswer(content == "I'm erotically drawn to tow trucks and freeway shoulders");
    then
        ArrayList<UserAnswer> answers = new ArrayList<>();
        answers.add(new UserAnswer("Also really lovely"));
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("Lotus Elan"));
//        retract(a)
//        retract(q)
        insert(new Question("Ok. Should it be pretty quick?", answers, cars));
end

rule "Ok. Should it be pretty quick? - Also really lovely"
    when
        q : Question(content.equals("Ok. Should it be pretty quick?"));
        a : UserAnswer(content.equals("Also really lovely"));
    then
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("ALfa Romeo Giulia Super"));
        insert(new Question("", new ArrayList<UserAnswer>(), cars));
end

rule "Oh yeah? Why's that? - I want to know how cars work"
    when
        q : Question(content.equals("Why do you want a classic?"));
        a : UserAnswer(content.equals("I want to know how cars work"));
    then
        ArrayList<UserAnswer> answers = new ArrayList<>();
        answers.add(new UserAnswer("Sounds good"));
        answers.add(new UserAnswer("Not that archaic"));
        answers.add(new UserAnswer("More archaic"));
        insert(new Question("So, something really simple?", answers, new ArrayList<Car>()));
end

rule "So, something really simple? - Sounds good"
    when
        q : Question(content.equals("So, something really simple?"));
        a : UserAnswer(content.equals("Sounds good"));
    then
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("Citroen 2CV"));
        cars.add(new Car("VW Thing"));
        cars.add(new Car("Willys Jeep"));
        cars.add(new Car("Honda Civic"));
        insert(new Question("", new ArrayList<UserAnswer>(), cars));
end

rule "So, something really simple? - More archaic"
    when
        q : Question(content.equals("So, something really simple?"));
        a : UserAnswer(content.equals("More archaic"));
    then
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("Ford model T"));
        insert(new Question("", new ArrayList<UserAnswer>(), cars));
end

rule "So, something really simple? - Not that archaic"
    when
        q : Question(content.equals("So, something really simple?"));
        a : UserAnswer(content.equals("Not that archaic"));
    then
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("Ford model A"));
        insert(new Question("", new ArrayList<UserAnswer>(), cars));
end

// I guess I'm making some kind of statement about something? - branch 2/5

rule "Why do you want a classic? - I guess I'm making some kind of statement about something?"
    when
        q : Question(content.equals("Why do you want a classic?"));
        a : UserAnswer(content.equals("I guess I'm making some kind of statement about something?"));
    then
        ArrayList<UserAnswer> answers = new ArrayList<>();
        answers.add(new UserAnswer("I'm really rich but like to pretend I'm still a hippie"));
        answers.add(new UserAnswer("The mothership left me in Paris"));
        answers.add(new UserAnswer("I run an NYC-themed diner in Las Vegas"));
        answers.add(new UserAnswer("I live dangerously and Nader can suck it"));
        answers.add(new UserAnswer("I will only drive vehicles with two distinct luggage areas"));
        answers.add(new UserAnswer("I'm a kook. An american kook."));
        answers.add(new UserAnswer("I take driving seriously and have the gloves to prove it"));
        answers.add(new UserAnswer("My wallet is on a chain"));
        answers.add(new UserAnswer("I'm a refugee from an alternate future with zeppelins and shit"));
        answers.add(new UserAnswer("I like being part of a massive automotive subculture"));
        answers.add(new UserAnswer("I hate people knowing what i drive"));
        answers.add(new UserAnswer("I kinda wanted a motorcycle, but i have no balance"));
        insert(new Question("Great, what kind of statement?", answers, new ArrayList<Car>()));
end

rule "Great, what kind of statement? - I'm really rich but like to pretend I'm still a hippie"
when
    q : Question(content.equals("Great, what kind of statement?"));
    a : UserAnswer(content.equals("I'm really rich but like to pretend I'm still a hippie"));
then
    ArrayList<Car> cars = new ArrayList<>();
    cars.add(new Car("VW type 2 microbus"));
    insert(new Question("", new ArrayList<UserAnswer>(), cars));
end

rule "Great, what kind of statement? - The mothership left me in Paris"
    when
        q : Question(content.equals("Great, what kind of statement?"));
        a : UserAnswer(content.equals("The mothership left me in Paris"));
   then
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("Citroen SM"));
        insert(new Question("", new ArrayList<UserAnswer>(), cars));
end

rule "Great, what kind of statement? - I run an NYC-themed diner in Las Vegas"
    when
        q : Question(content.equals("Great, what kind of statement?"));
        a : UserAnswer(content.equals("I run an NYC-themed diner in Las Vegas"));
    then
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("Checker Marathon"));
        insert(new Question("", new ArrayList<UserAnswer>(), cars));
end

rule "Great, what kind of statement? - I live dangerously and Nader can suck it"
    when
        q : Question(content.equals("Great, what kind of statement?"));
        a : UserAnswer(content.equals("I live dangerously and Nader can suck it"));
    then
        ArrayList<Car> cars = new ArrayList<>();
        cars.add(new Car("Chevy Corvair"));
        insert(new Question("", new ArrayList<UserAnswer>(), cars));
end